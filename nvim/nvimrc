"set nocompatible " Always nocompatible in neovim

" Plug Scripts +++ {{{
" Installation:
"   mkdir -p ~/.nvim/autoload
"   curl -fLo ~/.nvim/autoload/plug.vim \
"     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
call plug#begin('~/.nvim/plugged')

Plug 'mhinz/vim-startify'
Plug 'bling/vim-airline'

Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround' "csXX, dsX, ysMX, yssX
"Plug 'tpope/vim-abolish' "Abbreviation, substitution, coercion
Plug 'tpope/vim-repeat' "tpope plugin repeat

Plug 'Shougo/unite.vim' , { 'on': ['Unite'] } "has many more commands
Plug 'rking/ag.vim' , { 'on': ['Ag', 'AgBuffer', 'AgFile'] } "AgAdd AgFromSearch

Plug 'powerman/vim-plugin-viewdoc'
Plug 'mbbill/undotree', { 'on': 'UndotreeToggle' }
"Plug 'benekastah/neomake'
Plug 'kassio/neoterm'

Plug 'rust-lang/rust.vim'
Plug 'PotatoesMaster/i3-vim-syntax'
Plug 'spf13/vim-autoclose'

call plug#end()
" Plug Scripts --- }}}

filetype plugin indent on
if $TERM == 'linux'
	colorscheme desert
else
	colorscheme desertEx-v2
endif
syntax enable

" Global Options +++ {{{
" -= UI =-
set diffopt+=vertical
set display+=lastline " Show as much of last line as possible
set foldmethod=marker
set hidden " Buffers can be hidden keeping its changes
set laststatus=2
set lazyredraw " Faster <C-O> mappings in insert mode with airline
set number
set relativenumber " Relative line numbering
set ruler " Show line and column numbers
set scrolloff=1
set showcmd
set noshowmode
set wildmenu " Enhanced command line suggestions
set wildmode=longest,full

" -= Usability =-
set autoindent
set backspace=indent,eol,start
set incsearch " Show results simultaneously while typing a search command
set nrformats-=octal " For use with <C-A> and <C-X>
set timeoutlen=1200 " <leader> timeout

" -= History management =-
set directory=~/.nvim/swps
set history=256
set undofile
set undodir=~/.nvim/undos
set undolevels=256	" Maximum number of changes that can be undone
set undoreload=2048	" Maximum number lines to save for undo on a buffer reload

" -= Formatting =-
set shiftwidth=4
set tabstop=4

" -= Session-saves =- :help :mksession
set ssop-=options " Do not store global and local values

" -= Spellcheck =-
set spellfile=~/.nvim/spell/en.utf-8.add
set spelllang=en
" Global Options --- }}}

" Plugin Options +++ {{{
if $TERM != 'linux'
	let g:airline_powerline_fonts = 1
endif
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#whitespace#mixed_indent_algo = 1
let g:airline_theme = 'bubblegum'
"alttheme: 'powerlineish' "hi VertSplit ctermfg=233 ctermbg=233 cterm=NONE

let g:surround_no_insert_mappings = 1
let g:viewdoc_openempty = 0
let g:autoclose_vim_commentmode = 1
let g:autoclose_rust_lifemode = 1

let g:neoterm_position = 'vertical'
let g:neoterm_automap_keys = '<leader>tt'
nnoremap <silent> <leader>tc :call neoterm#close_all()<cr>
" Plugin Options --- }}}

" Keymaps +++ {{{
" URL/XML/CString En/Decode maps: [u ]u [x ]x [y ]y
" CScope maps: <C-\>X <C-@>X <C-@><C-@>X

" Switch to normal mode
inoremap zj <Esc>
vnoremap zj <Esc>
tnoremap zj <C-\><C-N>

" Don't go to Ex mode, open cmd-line window instead.
nnoremap Q q:
nnoremap Y y$
nnoremap ]c :cn<CR>
nnoremap [c :cp<CR>

inoremap <C-A> <C-O>^
inoremap <C-E> <C-O>$
" Make <C-U> undoable
inoremap <C-U> <C-G>u<C-U>

" Alt maps in insert and command mode
inoremap <M-w> <C-O>w
inoremap <M-W> <C-O>W
inoremap <M-e> <C-O>e<Right>
inoremap <M-E> <C-O>E<Right>
inoremap <M-b> <C-O>b
inoremap <M-B> <C-O>B
inoremap <M-d> <C-O>d
inoremap <M-o> <Esc>o
inoremap <M-O> <Esc>O
noremap! <M-x> <Del>
noremap! <M-h> <Left>
noremap! <M-j> <Down>
noremap! <M-k> <Up>
noremap! <M-l> <Right>
cnoremap <M-f> <S-Right>
cnoremap <M-b> <S-Left>

" C-mode: <C-B> Home; <C-E> End; <C-F> C-window; <C-H> backspace
"		  <C-C> C-exit; <C-D> list-opts; <C-U> clear-back; <C-W> del-word
cnoremap <C-A> <Home>
" idea from tpope/vim-rsi
cnoremap <expr> <C-D> getcmdpos()>strlen(getcmdline())? "<C-D>": "<Del>"
" mimic line kill, or if at the end of line -- up
cnoremap <expr> <C-K> getcmdpos()>strlen(getcmdline()) ? "<C-K>" :
		\ getcmdpos()<2 ? "<C-E><C-U>" : "<C-\>egetcmdline()[0:getcmdpos()-2]<CR>"

" Terminal mode maps (only for nvim)
tnoremap <M-b> <Esc>b
tnoremap <M-d> <Esc>d
tnoremap <M-f> <Esc>f
tnoremap <M-h> <Esc>h
tnoremap <M-j> <Esc>j
tnoremap <M-k> <Esc>k
tnoremap <M-l> <Esc>l
tnoremap <M-n> <Esc>n
tnoremap <M-p> <Esc>p
tnoremap <M-w> <Esc>w
tnoremap <M-x> <Esc>x

vnoremap <leader>y "+y

nnoremap <M-h> <C-w>h
nnoremap <M-j> <C-w>j
nnoremap <M-k> <C-w>k
nnoremap <M-l> <C-w>l

nnoremap <leader>y "+y
nnoremap <leader>Y "+y$
nnoremap <leader>p o<Esc>"+p
nnoremap <leader>P O<Esc>"+p
nnoremap <leader>cd :cd %:p:h<CR>
nnoremap <leader>cl :set invcursorline<CR>
nnoremap <leader>co :copen<CR>
nnoremap <leader>do :DiffOrig<CR>
nnoremap <leader>hl :set invhlsearch<CR>
nnoremap <leader>m :MouseToggle<CR>
nnoremap <leader>n :<C-U>b <C-R>=GetModifiableBuffer(v:count, 1)<CR><CR>
nnoremap <leader>N :<C-U>b <C-R>=GetModifiableBuffer(v:count, -1)<CR><CR>
nnoremap <leader>o :Startify<CR>
nnoremap <leader>q :call SwitchAndClose()<CR>
nnoremap <leader>Q :qall<CR>
nnoremap <leader>s :set invspell<CR>
nnoremap <leader>u :UndotreeToggle<CR>
nnoremap <leader>vo :call CloseHiddenBuffers()<CR>
nnoremap <leader>w :update<CR>

autocmd FileType man\|help nnoremap <buffer> d <C-D>
autocmd FileType man\|help nnoremap <buffer> u <C-U>
autocmd FileType netrw nnoremap <buffer> qq <C-^>
autocmd FileType netrw nmap <buffer> <Space> mf
autocmd FileType rust setlocal makeprg=cargo\ build|Tmap cargo build
" Keymaps --- }}}

" Custom commands +++ {{{
command! MouseToggle if &mouse=="" | set mouse=a | else | set mouse= | endif

" See the diff between the current buffer and the file on disk.
command! DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis
				\ | wincmd p | diffthis
" Custom commands --- }}}

